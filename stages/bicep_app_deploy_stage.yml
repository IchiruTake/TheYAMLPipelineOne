parameters:
- name: environmentObjects
  type: object
  default:
      environmentName: 'dev'
      regionAbrvs: ['cus']
      dependsOnEnv: ''
- name: templateFileName
  type: string
  default: ''
- name: templateDirectory
  type: string
  default: 'Infrastructure'
- name: templateParametersFile
  type: string
  default: 'parameters'
- name: serviceName
  type: string
  default: ''
- name: infrastructureHasSecrets
  type: boolean
  default: false
- name: infrastructureSecrets
  type: object
  default: []
- name: packageForLinux
  type: string
  default: ''
- name: inLineScript
  type: string
  default: ''
- name: deploymentScope
  type: string
  default: 'subscription'
- name: webAppType
  type: string
  default: 'webApp'
- name: runADE
  type: boolean
  default: false
- name: bicepParamExt
  type: boolean
  default: false

stages:
  - ${{ each environmentObject in parameters.environmentObjects }} :
    - ${{ each regionAbrv in environmentObject.regionAbrvs }} :
      - stage: '${{ parameters.serviceName }}_${{ environmentObject.environmentName }}_${{ regionAbrv }}_deploy'
        variables: 
          ${{ if eq(environmentObject.dependsOnEnv,'' )}} :
            ${{ if eq(parameters.runADE, true)}} :
              dependsOnEnv: '${{ parameters.serviceName }}_ade_build'
            ${{ else }}:
              dependsOnEnv: '${{ parameters.serviceName }}_build'
          ${{ else }}:
            dependsOnEnv: '${{ parameters.serviceName }}_${{environmentObject.dependsOnEnv}}_${{ regionAbrv }}_deploy'
          workSpace: $(Pipeline.Workspace)
        dependsOn: ${{ variables.dependsOnEnv }}

        jobs:
        - ${{ if eq(parameters.deploymentScope, 'subscription')}} :
          - template: ../jobs/bicep_deploy_env_job.yml
            parameters:
              environmentName: ${{ environmentObject.environmentName }}
              templateFileName: ${{ parameters.templateFileName }}
              templateDirectory: ${{ parameters.templateDirectory }}
              serviceName: ${{ parameters.serviceName}}
              regionAbrv: ${{ regionAbrv }}
              infrastructureHasSecrets: ${{ parameters.infrastructureHasSecrets }}
              infrastructureSecrets: ${{ parameters.infrastructureSecrets}}
              bicepParamExt: ${{ parameters.bicepParamExt }}
        - ${{ elseif eq(parameters.deploymentScope, 'resourceGroup') }} : 
          - template: ../jobs/arm_rg_deploy_env_job.yml
            parameters:
              environmentName: ${{ environmentObject.environmentName }}
              templateFileName: ${{ parameters.templateFileName }}
              templateDirectory: ${{ parameters.templateDirectory }}
              serviceName: ${{ parameters.serviceName}}
              regionAbrv: ${{ regionAbrv }}
              infrastructureHasSecrets: ${{ parameters.infrastructureHasSecrets }}
              infrastructureSecrets: ${{ parameters.infrastructureSecrets}}
              bicepParamExt: ${{ parameters.bicepParamExt }}
        - template: ../jobs/webapp_deploy_env_job.yml
          parameters:
            dependsOn: ${{ parameters.serviceName }}_infrastructure_${{ environmentObject.environmentName }}_${{ regionAbrv }}
            environmentName: ${{ environmentObject.environmentName }}
            serviceName: ${{ parameters.serviceName}}
            regionAbrv: ${{ regionAbrv }}
            packageForLinux: ${{ parameters.packageForLinux }}
            inLineScript: ${{ parameters.inLineScript }}
            webAppType: ${{ parameters.webAppType }}

        

    
