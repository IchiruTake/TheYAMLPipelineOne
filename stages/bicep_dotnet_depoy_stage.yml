parameters:
  projectNames: []
  regionAbrvs: '[cus]'
  environmentName: ''
  templateFile: ''
  templateDirectory: 'Infrastructure'
  projectNamesConfigurations:
    - projectName: ''
      deployConfiguration: 'Release'
      azureServiceName: ''
      deployToAPIM: false
      apimRoute: ''
  serviceName: ''
  dependsOnEnv: ''
  appName: ''
  infrastructureHasSecrets: false
  infrastructureSecrets: []
  deploymentScope: 'subscription'
  bicepParamExt: false

stages:
- ${{ each regionAbrv in parameters.regionAbrvs }} :
  - stage: deploy_${{ parameters.serviceName }}_${{parameters.environmentName }}_${{ regionAbrv }}
    variables: 
      ${{ if eq(parameters.BicepParamExt, true)}} :
        bicepParamString: '.bicepparam'
      ${{ else }} :
        bicepParamString: '.json'
      ${{ if eq(parameters.dependsOnEnv,'' )}} :
        dependsOnEnv: '${{ parameters.serviceName }}_build'
      ${{ else }}:
        dependsOnEnv: 'deploy_${{ parameters.serviceName }}_${{parameters.dependsOnEnv}}_${{ regionAbrv }}'
      workSpace: $(Pipeline.Workspace)
    dependsOn: ${{ variables.dependsOnEnv }}

    
    jobs:
    - ${{ if eq(parameters.deploymentScope, 'resourceGroup')}} : 
      - template: ../jobs/arm_rg_deploy_env_job.yml
        parameters:
          environmentName: ${{ environmentObject.environmentName }}
          templateFileName: ${{ parameters.templateFileName }}
          templateDirectory: ${{ parameters.templateDirectory }}
          serviceName: ${{ parameters.serviceName}}
          regionAbrv: ${{ regionAbrv }}
          infrastructureHasSecrets: ${{ parameters.infrastructureHasSecrets }}
          infrastructureSecrets: ${{ parameters.infrastructureSecrets}}
          paramExt: ${{ varaibles.bicepParamString }}
    - ${{ elseif eq(parameters.deploymentScope, 'subscription')}} :
      - template: ../jobs/bicep_deploy_env_job.yml
        parameters:
          environmentName: ${{ parameters.environmentName }}
          templateFile: ${{ parameters.templateFile }}
          templateDirectory: ${{ parameters.templateDirectory }}
          serviceName: ${{ parameters.serviceName}}
          regionAbrv: ${{ regionAbrv }}
          infrastructureHasSecrets: ${{ parameters.infrastructureHasSecrets }}
          infrastructureSecrets: ${{ parameters.infrastructureSecrets}}
          appName: ${{ parameters.appName }}
          paramExt: ${{ varaibles.bicepParamString }}
      

    - ${{ each projectNamesConfiguration in parameters.projectNamesConfigurations }} :
      - template: ../jobs/func_app_deploy_env_job.yml
        parameters:
          regionAbrv: ${{ regionAbrv }}
          environmentName: ${{ parameters.environmentName }}
          azureServiceName: ${{projectNamesConfiguration.azureServiceName}}
          serviceName: ${{ parameters.serviceName }}
          artifactName: ${{ replace(projectNamesConfiguration.projectName,'.','_') }}
          dependsOn: ['${{ parameters.serviceName }}_infrastructure_${{ parameters.environmentName }}_${{ regionAbrv }}']
          appName: ${{ parameters.appName }}
          deployToAPIM: ${{ projectNamesConfiguration.deployToAPIM}}
          packagePath: ${{ format('{0}/{1}/{2}', variables.workSpace, replace(projectNamesConfiguration.projectName,'.','_'), projectNamesConfiguration.projectName) }}
          apimRoutePath: ${{ projectNamesConfiguration.apimRoute }}
