parameters:
  solutionName: ''
  environmentName: 'dev'
  buildConfiguration: 'Release'
  projectName: ''
  dotnetTest: true
  zipAfterPublish: true
  publishWebProject: true
  publishArguments: ''
  sdkVersion: ''
  startUpProjectName: ''
  projectExtension: '.sqlproj'
  buildArguments: ''
  sqlServerName: ''
  sqlDatabaseName: ''
  regionAbrvs: ['cus']
  authenticationType: 'servicePrincipal'
  ipDetectionMethod: 'AutoDetect'
  dacpacAdditionalArguments: ''

jobs:
- job: build_publish_sql_${{parameters.projectName}}_${{ parameters.buildConfiguration }}_${{ parameters.environmentName }}
  variables:
  - template: ../variables/azure_${{parameters.environmentName}}_variables.yml
  - template: ../variables/azure_global_variables.yml
  - name: srcFilePath
    value: 'src'
  - name: projectName
    value: ${{replace(parameters.projectName,'_','.')}}
  - ${{ if eq(parameters.solutionName, '')}} :
      - name: projectPathBase
        value: '${{ variables.srcFilePath }}/${{ variables.projectName }}'
      - name: startUpProjectPathBase
        value: '${{ variables.srcFilePath }}/${{ parameters.startUpProjectName }}'
  - ${{ else }} :
      - name: projectPathBase
        value: '${{ parameters.solutionName }}/${{ variables.srcFilePath }}/${{ variables.projectName }}'
      - name: startUpProjectPathBase
        value: '${{ parameters.solutionName }}/${{ variables.srcFilePath }}/${{ parameters.startUpProjectName }}'
  - name: projectPath
    value: '$(Build.SourcesDirectory)/${{ variables.projectPathBase }}'
  - name: startUpProjectPath
    value: '$(Build.SourcesDirectory)/${{ variables.startUpProjectPathBase }}'
  
  steps:
  - template: ../tasks/dotnet_sdk_task.yml
    parameters:
        sdkVersion: ${{ parameters.sdkVersion }}
  - template: ../tasks/nuget_auth_task.yml
  - template: ../tasks/dotnetcore_cli_task.yml
    parameters:
        command: 'build'
        projectPath: '${{ variables.projectPath }}/*${{ parameters.projectExtension }}'
        arguments: '--configuration ${{ parameters.buildConfiguration }} ${{ parameters.buildArguments }}'

  - ${{ each regionAbrv in parameters.regionAbrvs }} :
    - template: ../tasks/dacpac_dacpac_deploy_task.yml
      parameters:
        azureSubscription: ${{ variables.azureServiceConnectionName }}
        sqlServerName: '${{ variables.sqlServerAbrv }}-${{ parameters.sqlServerName }}-${{ parameters.environmentName }}-${{ regionAbrv }}${{ variables.sqlServerURLSuffix }}'
        sqlDatabaseName: '${{ variables.sqlServerAbrv }}${{ parameters.sqlDatabaseName }}'
        authenticationType: ${{ parameters.authenticationType }}
        ipDetectionMethod: ${{ parameters.ipDetectionMethod }}
        dacpacFilePath: '${{ variables.projectPath }}/bin/${{ parameters.buildConfiguration }}'
        deploymentAction: 'DriftReport'
    - powershell: Get-ChildItem -Path $(Build.SourcesDirectory) -recurse
    - template: ../tasks/ado_copy_files_task.yml
      parameters:
      # $SqlDeploymentOutputFile is defined in https://github.com/microsoft/azure-pipelines-tasks/blob/master/Tasks/SqlAzureDacpacDeploymentV1/SqlAzureActions.ps1 since output path is hardcoded
        sourceFolder: 'GeneratedOutputFiles'
        targetFolder: '${{ variables.projectPath }}/bin/${{ parameters.buildConfiguration }}/${{ regionAbrv }}'
    - template: ../tasks/dacpac_dacpac_deploy_task.yml
      parameters:
        azureSubscription: ${{ variables.azureServiceConnectionName }}
        sqlServerName: '${{ variables.sqlServerAbrv }}-${{ parameters.sqlServerName }}-${{ parameters.environmentName }}-${{ regionAbrv }}${{ variables.sqlServerURLSuffix }}'
        sqlDatabaseName: '${{ variables.sqlServerAbrv }}${{ parameters.sqlDatabaseName }}'
        authenticationType: ${{ parameters.authenticationType }}
        ipDetectionMethod: ${{ parameters.ipDetectionMethod }}
        dacpacFilePath: 's/${{variables. projectPathBase }}/bin/${{ parameters.buildConfiguration }}/${{ parameters.projectName }}.dacpac'
        deploymentAction: 'DeployReport'
    - powershell: Get-ChildItem -Path $(Build.SourcesDirectory) -recurse
    - template: ../tasks/ado_copy_files_task.yml
      parameters:
        # $SqlDeploymentOutputFile is defined in https://github.com/microsoft/azure-pipelines-tasks/blob/master/Tasks/SqlAzureDacpacDeploymentV1/SqlAzureActions.ps1 since output path is hardcoded
        sourceFolder: 'GeneratedOutputFiles'
        targetFolder: '${{ variables.projectPath }}/bin/${{ parameters.buildConfiguration }}/${{ regionAbrv }}'
  - template: ../tasks/ado_publish_pipeline_task.yml
    parameters:
      artifactName: '${{ parameters.projectName }}_${{ parameters.buildConfiguration }}_${{ parameters.environmentName }}'
      targetPath: '${{ variables.projectPath }}/bin/${{ parameters.buildConfiguration }}'

